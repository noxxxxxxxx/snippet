import{_ as t,o as e,c as p,a,b as n,d as s}from"./app-309077b0.js";const o="/assets/demo-388075c2.png",c={},i=a(`<h1 id="css-effect" tabindex="-1"><a class="header-anchor" href="#css-effect" aria-hidden="true">#</a> CSS Effect</h1><h2 id="input-cursor-color" tabindex="-1"><a class="header-anchor" href="#input-cursor-color" aria-hidden="true">#</a> Input cursor color</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.input</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">caret-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
  <span class="token comment">/*插入光标颜色，小程序真机表现无效，大概率是因为input在focus状态下表现为原生组件，样式对原生组件内部无效*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="text-underline-cover" tabindex="-1"><a class="header-anchor" href="#text-underline-cover" aria-hidden="true">#</a> text underline cover</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">// recommand
span</span> <span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline #f005 .5em<span class="token punctuation">;</span>
  <span class="token property">text-underline-offset</span><span class="token punctuation">:</span> -4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -0.6em 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>219<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">)</span> 0 bottom/100% .5em no-repeat<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，下划线方法是最好的，为什么呢？因为下面两种方法都要求 span 元素必须是inline水平，如果设置为 display:block 或者display: inline-block ，则就会失效。而下划线方法不受元素的display计算值影响。</p><h2 id="some-elements-in-the-editable-content-are-non-editable" tabindex="-1"><a class="header-anchor" href="#some-elements-in-the-editable-content-are-non-editable" aria-hidden="true">#</a> Some elements in the editable content are non-editable.</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.at</span> <span class="token punctuation">{</span>
   <span class="token property">-webkit-user-modify</span><span class="token punctuation">:</span> read-only<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="custom-font-size-for-specific-characters" tabindex="-1"><a class="header-anchor" href="#custom-font-size-for-specific-characters" aria-hidden="true">#</a> Custom font size for specific characters</h2><p><img src="`+o+`" alt="demo"></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;span class=<span class="token string">&quot;price&quot;</span>&gt;100元&lt;/span&gt;
请补全下面CSS语句中缺少的CSS属性，实现配图所示的效果（“元”的字号小了50%）。
<span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> smallYuan<span class="token punctuation">;</span>
    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token function">local</span><span class="token punctuation">(</span><span class="token string">&#39;PingFang SC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token function">local</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft Yahei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">______size-adjust______</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">unicode-range</span><span class="token punctuation">:</span> U+5143<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.price</span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> smallYuan<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="css-implement-a-border-with-concave-corners" tabindex="-1"><a class="header-anchor" href="#css-implement-a-border-with-concave-corners" aria-hidden="true">#</a> CSS implement a border with concave corners</h2>`,12),l=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"四角凹陷边框实现",src:"https://codepen.io/hjoker/embed/vYQOvbe?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[s(" See the Pen "),n("a",{href:"https://codepen.io/hjoker/pen/vYQOvbe"}," 四角凹陷边框实现"),s(" by hjoker ("),n("a",{href:"https://codepen.io/hjoker"},"@hjoker"),s(") on "),n("a",{href:"https://codepen.io"},"CodePen"),s(". ")],-1),u=a(`<h2 id="implementation-of-a-dash-button" tabindex="-1"><a class="header-anchor" href="#implementation-of-a-dash-button" aria-hidden="true">#</a> Implementation of a dash button</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">button</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#000<span class="token punctuation">,</span> #000<span class="token punctuation">)</span> no-repeat center / 64px 2px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web-animations-api-fade-out" tabindex="-1"><a class="header-anchor" href="#web-animations-api-fade-out" aria-hidden="true">#</a> Web Animations API fade out</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Implement a fade-out effect on an element and keep its opacity at 0 for 300ms animation duration。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// or</span>
<span class="token keyword">var</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span><span class="token punctuation">[</span>effect<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> timeline<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> keyframes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyframeEffect</span><span class="token punctuation">(</span>eleImage<span class="token punctuation">,</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span>keyframes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// click element</span>
eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  animation<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="a-button-group-with-dividers" tabindex="-1"><a class="header-anchor" href="#a-button-group-with-dividers" aria-hidden="true">#</a> A button group with dividers</h2>`,6),r=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"带分割线的按钮组",src:"https://codepen.io/hjoker/embed/yLQNweb?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[s(" See the Pen "),n("a",{href:"https://codepen.io/hjoker/pen/yLQNweb"}," 带分割线的按钮组"),s(" by hjoker ("),n("a",{href:"https://codepen.io/hjoker"},"@hjoker"),s(") on "),n("a",{href:"https://codepen.io"},"CodePen"),s(". ")],-1),d=n("h2",{id:"middle-dash-on-both-sides-of-the-text",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#middle-dash-on-both-sides-of-the-text","aria-hidden":"true"},"#"),s(" Middle dash on both sides of the text")],-1),k=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"文字两侧中横线",src:"https://codepen.io/hjoker/embed/RwqPdKX?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},[s(" See the Pen "),n("a",{href:"https://codepen.io/hjoker/pen/RwqPdKX"}," 文字两侧中横线"),s(" by hjoker ("),n("a",{href:"https://codepen.io/hjoker"},"@hjoker"),s(") on "),n("a",{href:"https://codepen.io"},"CodePen"),s(". ")],-1),v=a(`<h2 id="h2-in-each-print-page-header" tabindex="-1"><a class="header-anchor" href="#h2-in-each-print-page-header" aria-hidden="true">#</a> H2 in each print page header</h2><p>Given an HTML document with the following structure:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Overview.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Subheading 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Subheading 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>Subheading 3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>Content.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Write a complete CSS statement (including CSS selector) that ensures that when the current page is printed, all second-level headings start at the top of a new printed page. For example, &quot;Subheading 1&quot; would start at the top of page 2, &quot;Subheading 2&quot; would start at the top of page 3, and &quot;Subheading 3&quot; would start at the top of page 4.</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token selector">h2</span> <span class="token punctuation">{</span>
    <span class="token property">break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
    <span class="token property">page-break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),m=[i,l,u,r,d,k,v];function h(b,g){return e(),p("div",null,m)}const y=t(c,[["render",h],["__file","index.html.vue"]]);export{y as default};
