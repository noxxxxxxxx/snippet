import{_ as a,o as t,c as e,a as s,b as n,d as p}from"./app-df127221.js";const o="/assets/demo-388075c2.png",c="/assets/demo1-2f4951d2.png",i="/assets/demo2-ba0469c7.png",l={},u=s(`<h1 id="css-效果" tabindex="-1"><a class="header-anchor" href="#css-效果" aria-hidden="true">#</a> CSS 效果</h1><h2 id="输入框光标颜色的设置" tabindex="-1"><a class="header-anchor" href="#输入框光标颜色的设置" aria-hidden="true">#</a> 输入框光标颜色的设置</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.input</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">caret-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
  <span class="token comment">/*插入光标颜色，小程序真机表现无效，大概率是因为input在focus状态下表现为原生组件，样式对原生组件内部无效*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文字一半区域色块效果实现" tabindex="-1"><a class="header-anchor" href="#文字一半区域色块效果实现" aria-hidden="true">#</a> 文字一半区域色块效果实现</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">// recommand
span</span> <span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline #f005 .5em<span class="token punctuation">;</span>
  <span class="token property">text-underline-offset</span><span class="token punctuation">:</span> -4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -0.6em 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>219<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">)</span> 0 bottom/100% .5em no-repeat<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，下划线方法是最好的，为什么呢？因为下面两种方法都要求 span 元素必须是inline水平，如果设置为 display:block 或者display: inline-block ，则就会失效。而下划线方法不受元素的display计算值影响。</p><h2 id="可编辑元素有某个元素不可编辑" tabindex="-1"><a class="header-anchor" href="#可编辑元素有某个元素不可编辑" aria-hidden="true">#</a> 可编辑元素有某个元素不可编辑</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.at</span> <span class="token punctuation">{</span>
   <span class="token property">-webkit-user-modify</span><span class="token punctuation">:</span> read-only<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="定制特定字符的字体大小" tabindex="-1"><a class="header-anchor" href="#定制特定字符的字体大小" aria-hidden="true">#</a> 定制特定字符的字体大小</h2><p><img src="`+o+`" alt="demo"></p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code>&lt;span class=<span class="token string">&quot;price&quot;</span>&gt;100元&lt;/span&gt;
请补全下面CSS语句中缺少的CSS属性，实现配图所示的效果（“元”的字号小了50%）。
<span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> smallYuan<span class="token punctuation">;</span>
    <span class="token property">src</span><span class="token punctuation">:</span> <span class="token function">local</span><span class="token punctuation">(</span><span class="token string">&#39;PingFang SC&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
       <span class="token function">local</span><span class="token punctuation">(</span><span class="token string">&quot;Microsoft Yahei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">______size-adjust______</span><span class="token punctuation">:</span> 50%<span class="token punctuation">;</span>
    <span class="token property">unicode-range</span><span class="token punctuation">:</span> U+5143<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.price</span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> smallYuan<span class="token punctuation">;</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 24px<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="背景色消失之谜" tabindex="-1"><a class="header-anchor" href="#背景色消失之谜" aria-hidden="true">#</a> 背景色消失之谜</h2><p><img src="`+c+`" alt="demo"></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>已知如下HTML和CSS代码：
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://imgservices-1252317822.image.myqcloud.com/coco/s09222022/77917eb6.9eglru.png<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>caption<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>毛发素材<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
img {
  display: block;
}
.caption {
  width: 200px;
  text-align: center;
  background-color: rgba(0,0,0,.5);
  color: white;
  text-shadow: 1px 1px #0003;
  line-height: 2;
  margin: -2em 0 0;
  position: relative; // 添加此行
}
渲染效果如配图所示，请问，为何<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>元素的背景色消失了？如何让背景色显示？
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+i+'" alt="demo"></p><h2 id="四角凹陷边框实现" tabindex="-1"><a class="header-anchor" href="#四角凹陷边框实现" aria-hidden="true">#</a> 四角凹陷边框实现</h2>',16),r=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"四角凹陷边框实现",src:"https://codepen.io/hjoker/embed/vYQOvbe?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/hjoker/pen/vYQOvbe">
  四角凹陷边框实现</a> by hjoker (<a href="https://codepen.io/hjoker">@hjoker</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),d=s(`<h2 id="短横线按钮的实现" tabindex="-1"><a class="header-anchor" href="#短横线按钮的实现" aria-hidden="true">#</a> 短横线按钮的实现</h2><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">button</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 48px<span class="token punctuation">;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>#000<span class="token punctuation">,</span> #000<span class="token punctuation">)</span> no-repeat center / 64px 2px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="web-animations-api与淡出" tabindex="-1"><a class="header-anchor" href="#web-animations-api与淡出" aria-hidden="true">#</a> Web Animations API与淡出</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>已知页面上有个 &lt;img&gt;  元素，其变量名称是  eleImage。
请使用 Web Animations API 实现点击该 &lt;img&gt; 元素，元素执行淡出效果并保持透明度为 0，动画时间 300ms。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
        <span class="token comment">// 或者 &#39;both&#39;</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或者下面语法：</span>
eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
        <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
        <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 或者下面语法：</span>
<span class="token keyword">var</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span><span class="token punctuation">[</span>effect<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span> timeline<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> keyframes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">KeyframeEffect</span><span class="token punctuation">(</span>eleImage<span class="token punctuation">,</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">opacity</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token literal-property property">fill</span><span class="token operator">:</span> <span class="token string">&#39;forwards&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> animation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animation</span><span class="token punctuation">(</span>keyframes<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 点击元素</span>
eleImage<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;click&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  animation<span class="token punctuation">.</span><span class="token function">play</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="带分割线的按钮组" tabindex="-1"><a class="header-anchor" href="#带分割线的按钮组" aria-hidden="true">#</a> 带分割线的按钮组</h2>`,6),k=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"带分割线的按钮组",src:"https://codepen.io/hjoker/embed/yLQNweb?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/hjoker/pen/yLQNweb">
  带分割线的按钮组</a> by hjoker (<a href="https://codepen.io/hjoker">@hjoker</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),v=n("h2",{id:"文字两侧中横线",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#文字两侧中横线","aria-hidden":"true"},"#"),p(" 文字两侧中横线")],-1),m=n("iframe",{height:"300",style:{width:"100%"},scrolling:"no",title:"文字两侧中横线",src:"https://codepen.io/hjoker/embed/RwqPdKX?default-tab=css%2Cresult",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},`
  See the Pen <a href="https://codepen.io/hjoker/pen/RwqPdKX">
  文字两侧中横线</a> by hjoker (<a href="https://codepen.io/hjoker">@hjoker</a>)
  on <a href="https://codepen.io">CodePen</a>.
`,-1),b=s(`<h2 id="打印如下页面结构-h2标题均在新页的顶部" tabindex="-1"><a class="header-anchor" href="#打印如下页面结构-h2标题均在新页的顶部" aria-hidden="true">#</a> 打印如下页面结构，H2标题均在新页的顶部</h2><p>已知一个HTML文档页面的HTML结构如下：</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>概述。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>二级标题1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>内容。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>二级标题2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>内容。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>二级标题3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>内容。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请写下一段完整的CSS语句（包括CSS选择器），实现对当前页面执行打印操作的时候，所有的二级标题均是新开的打印页的顶部。例如“二级标题1”就在第2页的顶部，二级标题2”就在第3页的顶部，二级标题3”就在第4页的顶部。</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@media</span> print</span> <span class="token punctuation">{</span>
  <span class="token selector">h2</span> <span class="token punctuation">{</span>
    <span class="token property">break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
    <span class="token property">page-break-before</span><span class="token punctuation">:</span> always<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),h=[u,r,d,k,v,m,b];function g(y,f){return t(),e("div",null,h)}const x=a(l,[["render",g],["__file","index.html.vue"]]);export{x as default};
