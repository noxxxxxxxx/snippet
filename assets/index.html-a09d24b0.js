import{_ as n,o as s,c as a,a as e}from"./app-dbcd2ce6.js";const t={},c=e(`<h1 id="css-effect" tabindex="-1"><a class="header-anchor" href="#css-effect" aria-hidden="true">#</a> CSS Effect</h1><h2 id="input-cursor-color" tabindex="-1"><a class="header-anchor" href="#input-cursor-color" aria-hidden="true">#</a> Input cursor color</h2><p>输入框光标颜色的设置</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.input</span> <span class="token punctuation">{</span>
  <span class="token property">color</span><span class="token punctuation">:</span> black<span class="token punctuation">;</span>
  <span class="token property">caret-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> 
  <span class="token comment">/*插入光标颜色，小程序真机表现无效，大概率是因为input在focus状态下表现为原生组件，样式对原生组件内部无效*/</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="text-underline-cover" tabindex="-1"><a class="header-anchor" href="#text-underline-cover" aria-hidden="true">#</a> text underline cover</h2><p>文字一半区域色块效果实现</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">// recommand
span</span> <span class="token punctuation">{</span>
  <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline #f005 .5em<span class="token punctuation">;</span>
  <span class="token property">text-underline-offset</span><span class="token punctuation">:</span> -4px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">box-shadow</span><span class="token punctuation">:</span> inset 0 -0.6em 0 0 <span class="token function">rgba</span><span class="token punctuation">(</span>219<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 42<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token selector">// or
span</span> <span class="token punctuation">{</span> <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.5<span class="token punctuation">)</span><span class="token punctuation">)</span> 0 bottom/100% .5em no-repeat<span class="token punctuation">;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，下划线方法是最好的，为什么呢？因为下面两种方法都要求 span 元素必须是inline水平，如果设置为 display:block 或者display: inline-block ，则就会失效。而下划线方法不受元素的display计算值影响。</p><h2 id="use-css-make-some-contenteditable-element-not-editable" tabindex="-1"><a class="header-anchor" href="#use-css-make-some-contenteditable-element-not-editable" aria-hidden="true">#</a> use css make some contenteditable element not editable</h2><p>可编辑元素有某个元素不可编辑</p><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.at</span> <span class="token punctuation">{</span>
   <span class="token property">-webkit-user-modify</span><span class="token punctuation">:</span> read-only<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),p=[c];function o(i,l){return s(),a("div",null,p)}const r=n(t,[["render",o],["__file","index.html.vue"]]);export{r as default};
