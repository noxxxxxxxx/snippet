import{_ as a,o as s,c as e,a as n}from"./app-df127221.js";const t={},r=n(`<h1 id="imagemagick" tabindex="-1"><a class="header-anchor" href="#imagemagick" aria-hidden="true">#</a> ImageMagick</h1><h2 id="图像平铺效果" tabindex="-1"><a class="header-anchor" href="#图像平铺效果" aria-hidden="true">#</a> 图像平铺效果</h2><ul><li>使用蓝色填充颜色，大小为20，创建一个标签“snibgo”。</li><li>将标签旋转-20度，并重新组织页面。</li><li>将结果保存为名为&quot;TILE&quot;的中间图像。</li><li>删除原始图像，加载名为&quot;toes.png&quot;的新图像，并设置其透明度。</li><li>创建一个副本并将其填充为中间图像的颜色。</li><li>将填充的副本与原始图像进行合成。</li><li>将结果保存为名为&quot;snibtile.jpg&quot;的新图像。</li></ul><p>总体作用是将标签&quot;snibgo&quot;旋转并填充到原始图像的每个像素上，以创建一个平铺效果的新图像。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>convert <span class="token parameter variable">-background</span> None <span class="token parameter variable">-fill</span> Blue  <span class="token parameter variable">-pointsize</span> <span class="token number">20</span> label:snibgo  <span class="token parameter variable">-rotate</span> <span class="token parameter variable">-20</span> +repage  +write mpr:TILE +delete toes.png <span class="token parameter variable">-alpha</span> <span class="token builtin class-name">set</span> ^
  <span class="token punctuation">(</span> +clone ^
    <span class="token parameter variable">-fill</span> mpr:TILE <span class="token parameter variable">-draw</span> <span class="token string">&quot;color 0,0 reset&quot;</span> ^
  <span class="token punctuation">)</span> ^
  <span class="token parameter variable">-composite</span> ^
  snibtile.jpg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="添加水印" tabindex="-1"><a class="header-anchor" href="#添加水印" aria-hidden="true">#</a> 添加水印</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash # usage: ./watermark.sh &quot;your text&quot; input_image_path.png </span>
convert <span class="token parameter variable">-background</span> none <span class="token parameter variable">-fill</span> <span class="token string">&quot;rgba(128,128,128,0.25)&quot;</span> <span class="token parameter variable">-font</span> Arial <span class="token parameter variable">-rotate</span> <span class="token parameter variable">-30</span> <span class="token parameter variable">-pointsize</span> <span class="token number">14</span> label:<span class="token string">&quot;<span class="token variable">$1</span>&quot;</span> /Users/xxx/Desktop/watermark.png 
convert <span class="token variable">$2</span> <span class="token parameter variable">-alpha</span> on <span class="token punctuation">\\</span><span class="token punctuation">(</span> +clone <span class="token parameter variable">-tile</span> /Users/xxx/Desktop/watermark.png <span class="token parameter variable">-draw</span> <span class="token string">&quot;color 0,0 reset&quot;</span> <span class="token punctuation">\\</span><span class="token punctuation">)</span> <span class="token parameter variable">-composite</span> test.png <span class="token function">rm</span> /Users/xxx/Desktop/watermark.png
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),i=[r];function l(p,o){return s(),e("div",null,i)}const u=a(t,[["render",l],["__file","index.html.vue"]]);export{u as default};
